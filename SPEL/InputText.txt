[TEST] Example Program
The tale begins.

I summon thy name Link
	craft points life_points.
	craft precise mana_points.
	craft rune armor_enchantments.
	craft absolute mortality.
	craft tome allegiance bestow "Zelda".
	
	void spell attack sacrifice precise stamina, precise mana :
		enchant stamina with stamina - 1.
		enchant mana with mana - 2.
	terminus
	points spell fire sacrifice precise mana, rune equipment :
		cast (mana*equipment).
		enchant a with life_points of clone.//nu se poate enchant de variabila a obiectului. trebuie reparat
		if (equipment > '\3') beginif
			enchant life_points of clone with a.
		endif
		else beginelse
			cast 0.
		endelse
	terminus
and thy brethren.

craft Link clone.

enchant life_points of clone with 100.

craft artifact points basic_attack bestow 3.

[END]

[TEST] Null program
The tale begins.
[END]


[TEST] Comentarii
The tale begins.
/* comentariu cu text intern
pe mai multe 
linii*/
/**/
//
[END]

[TEST] Predefined types variable declarations
The tale begins.
craft points a.
craft precise b.
craft rune v.
craft tome str.
craft absolute bolean.
[END]

[TEST] Variable init
The tale begins.
craft points a bestow 1.
craft precise b bestow c.
craft precise d bestow 1.0.
craft rune v bestow 'a'.
craft string str bestow "a".
craft absolute bolean bestow true.
[END]

[TEST] Const declarations
The tale begins.
craft artifact points kst1 bestow 1.
craft artifact precise kst2 bestow 1.1.
craft artifact rune kst3 bestow 5.
craft artifact tome kst4 bestow "kst4".
craft artifact points vkst[3] bestow [1, 3, 1]. //declarare size la const? 
//craft artifact points _a bestow 1. - _ID will no longer be allowed
[END]

[TEST] Vector declarations
The tale begins.
craft points a1[].
craft precise b1[].
craft rune v1[].
craft tome str1[].
craft absolute bol1[].
craft clasa1 obj1[].
[END]

[TEST] Functions declaration
The tale begins.
points spell man sacrifice points a, points b: 
	cast a+b*3.
terminus
points spell functie sacrifice time :
	enchant b with 55*3/2.
	enchant str with "string1"+"string2".
terminus
[END]

[TEST] Function calls
The tale begins.
chant functie sacrifice a + a of obj:.
chant functie sacrifice chant man sacrifice 1+3 :: .
chant functie sacrifice 45 :.
chant functie sacrifice 3+4, "7":.
chant functie sacrifice kst1 :.
chant functie sacrifice a:.
[END]

[TEST] Cast return
The tale begins.
points spell functie sacrifice time :
	cast 0.
terminus
void spell functie sacrifice time :
	craft points a bestow 100.
	//cast 0. nu merge cu cast intro functie void
terminus
[END]

[TEST] Return in main
The tale begins.
if (true) beginif
	cast 0.
endif
cast 1.
[END]

[TEST] Class Declarations
The tale begins.
//aceasta trebuie sa dea eroare daca este documentata
//I summon thy name clasa1 
//and thy brethren.

I summon thy name clasa2
//	points spell functie_clasa2 sacrfice time : terminus.
//	functia vida da eroare
	void spell functie2 sacrifice time : 
		craft rune sir[] bestow ['1', 'a', 2, '\4'].
		craft points a bestow health of hero.
	terminus
	void spell functie_void_cu_return sacrifice time :
//		cast 4.
		craft precise c bestow 1.1.
	terminus
	//in declaratii la functii const nu trebuie sa fie initializat
	tome spell functie_cu_return sacrifice tome a, artifact rune b[]:
		cast b[3].
//		craft artifact precise vec[] bestow [1,4.5].
		craft artifact precise vec[5] bestow [1,4.5].
	terminus
and thy brethren.
I summon thy name clasa3
	void spell functie2 sacrifice time: 
		craft rune sir[] bestow ['1', 'a', 2, '\4'].
	terminus
	craft points x.
	void spell functie_void_cu_return sacrifice time :
		craft precise c bestow 1.1.
	terminus
	craft absolute variabila[] bestow [true, false].
and thy brethren.
[END]

[TEST] Class instantiation
The tale begins.
craft clasa1 obj.
[END]

[TEST] Conditionals & Arithmetic
The tale begins.
if (a && (b != 0)) beginif
	chant functie sacrifice 1:.
endif
else beginelse
	chant functie sacrifice 1:.
endelse
[END] 

[TEST] Loops
The tale begins.
while (c >= 0 && (b!=0))
	craft points a bestow health of hero.
	craft tome str1[1] bestow [3].
	chant functie sacrifice 45:.
endwhile
[END]

[TEST] For loops
The tale begins.
for (x in 1:30) //for (points x=1. x<=30. x++)
	craft points b.
endfor
craft points x bestow chant functie sacrifice 3 : .
for (x in str1) //for (auto:x in str1) - 
	craft points a bestow health[3] of hero.
	craft points a bestow health of hero[4].
	craft rune f bestow 4.
	chant functie sacrifice 4 : .
	enchant b with 3/(health of hero[3]).
endfor
[END]

[TEST] Array element assign
The tale begins.
enchant v[5] with 4.
[END]

[TEST] Of operator
The tale begins.
enchant life_points of clone with 100.
[END]

[TEST][SHOULD FAIL] List instantiation on a single unit
The tale begins.
craft tome str bestow "string1"+"string2","asas".
[END]

[TEST][SHOULD FAIL] Arithmetic operations vs boolean operations
The tale begins.
if (2+3 < a - 1) beginif
	craft artifact points ii bestow 0.
endif
[END]






[TEST] Eval function
The tale begins.
EVAL().
EVAL(a).
EVAL(3).
[END]
[TEST][SHOULD FAIL] Non-int eval function float
The tale begins.
EVAL(3.0).
[END]
[TEST][SHOULD FAIL] Non-int eval function string
The tale begins.
EVAL("str").
[END]
[TEST][SHOULD FAIL] Non-int eval function multiple param
The tale begins.
EVAL(1, 2).
[END]
[TEST][SHOULD FAIL] Non-int eval function expression
The tale begins.
EVAL(enchant 1 with 2).
[END]




///////////////////////////////////////////////////////////////////////////////////////////
//Testele de aici vor fi facute cand facem testing pentru semantic
points a. //trebuie sa dea eroare
enchant a with "4". //eroare

points man sacrifice points a, points b : {cast 4.}//eroare, definita cu aceeasi signatura
man(b, 4).//eroare
Eval(4.5). //eroare