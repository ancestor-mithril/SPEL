while(a)
	c=3;
endwhile

max(b);

functie(a);
const int _a=1;
functie(a);
const float zet[4]=[4, 1, 2, 4];

functie(a+obj.a);
string sir = "text";

//test1

/*da*/
// comentariu pana la final de linie
/* comentariu cu text intern
pe mai multe 
linii*/ 
/**/
deci float bool corect = int[];
float b1[];
//test2
int a;
float b;
char v;
string str;
bool bolean;

//test3
int a = 1;
float b = c;
float d = 1.0;
char v = 'a';
string str = "a";
bool bolean[] = [true, false]; 
//test4
begin int man(int a, int b) 
	return a+b*3;
end
//test5
begin class clasa1
	int a, c;
	float b;
	char v;
	string str;
	bool bolean;
	begin int max(int x1, int x2)
	/*daca exista begin&end la functie nu prea are sens sa facem declaratia functiei fara nimic in ea.
		return x1;
	end
end
//test6
clasa1 obj;
//test7
int a1[];
/*modificat declaratiile de la vector, le-am facut la fel ca declaratia de mai sus, sa fie consistenta */
float b1[];
char v1[];
string str1[];
bool bol1[];
clasa1 obj1[];

//test8
const int kst1=1;
const float kst2=1.1;
const char kst3=5;
const string kst4="kst4";
const int vkst[3] =[1, 3, 1]; //declarare size la const? 
//test9
//float functie(int a){return 1;} //asta nu are sa mearga daca ii decomentata, pentru ca nu asa e sintaxa
begin float functie(int a) return 1; end
//dar asta de jos speram sa mearga

if (a){
	functie(1);
}
else{
functie(1);
}
//asta o sa mearga desii nu ar trebuii, si o sa dea mesaj pe ecran
begin int max() return 2+3; end

functie(a+obj.a);
functie(man(1+3));
functie(45);
functie(3+4);
functie(kst1);
//test9 CONDITIONALS

if (a1[0]>b1[1])
	b=3.1;
else
	v='a';
endif
while (b>1)
	b=b-1;
	str1[1]=str1[1]+"da";
	str1=str1 & "banu";
endwhile
//test10 Loops
/* //am comentat while pentru ca nu stiu de ce nu imi merge. Adica este in aceasi instructiune cu if, care functioneaza, dar nu il recunoaste
//dar !! pe ala de la inceput il recunoaste
while (b>1)
	b=b-1;
	str1[1]=str1[1]+"da";
	str1=str1 & "banu";
endwhile
*/

//test11 For loops

for (x in 1:30); //for (int x=1; x<=30; x++)
endfor
for (x in str1); //for (auto:x in str1) - 
//aici sintaxa va fi for x in variabila, nu trebuie facuta validare decat ca partea dreapta este fie variabila fie string
//daca variabila va fi string validarea se va face la semantic
endfor
//
//Testele de aici vor fi facute cand facem testing pentru semantic
int a; //trebuie sa dea eroare
a="4"; //eroare
b=3+obj1.b //eroare, obj1.b nu definit

int man(int a, int b){return 4;}//eroare, definita cu aceeasi signatura
man(b, 4);//eroare
Eval(4.5); //eroare