
[TEST] Function calls:
The tale begins.

craft points a bestow 3.

points spell functie sacrifice points p :
	cast 3.
terminus

points spell man sacrifice points life :
	cast life.
terminus

chant functie sacrifice chant man sacrifice 1+3 :: .
chant functie sacrifice 45 :.
chant functie sacrifice 3+4, "7":.
chant functie sacrifice kst1 :.
chant functie sacrifice a:.
chant functie sacrifice a + a of obj:.
[END]

[TEST][SHOULD FAIL] Functions must be defined before use:

craft points a bestow chant functie sacrifice 3:.

[END]

[TEST][SHOULD FAIL] Assignment should have the same type error :
The tale begins.

craft points a bestow "a".
[END]

[TEST][SHOULD FAIL] Functions call parameters should have the same type :
The tale begins.

points spell functie sacrifice points p :
	cast 3.
terminus

chant functie sacrifice "a" :.

[END]

[TEST] Return in main:
The tale begins.
if (true)
	cast 0.
endif
cast 1.
[END]

[TEST][SHOULD FAIL] Empty class:
The tale begins.
I summon thy name clasa1
and thy brethren.
[END]

[TEST] Class Declarations:
The tale begins.

I summon thy name clasa2
	void spell functie2 sacrifice time :
		craft rune sir[4] bestow ['1', 'a', 2, '\4'].
		craft points a bestow health of hero.
	terminus
	void spell functie_void_cu_return sacrifice time :
		craft precise c bestow 1.1.
	terminus
	//in declaratii la functii const nu trebuie sa fie initializat
	tome spell functie_cu_return sacrifice tome a, artifact rune b[]:
		cast b[3].
		craft artifact precise vec[5] bestow [1,4.5].
	terminus
and thy brethren.
I summon thy name clasa3
	void spell functie2 sacrifice time:
		craft rune sir[] bestow ['1', 'a', 2, '\4'].
	terminus
	craft points x.
	void spell functie_void_cu_return sacrifice time :
		craft precise c bestow 1.1.
	terminus
	craft absolute variabila[] bestow [true, false].
and thy brethren.
[END]

[TEST] Class instantiation:
The tale begins.

I summon thy name clasa1
	craft points a bestow 1.
and thy brethren.

craft clasa1 obj.
[END]

[TEST][SHOULD FAIL] Duplicate class error:
The tale begins.

I summon thy name Link
	craft points life_points bestow 5.
and thy brethren.

I summon thy name Link
	craft points life_points bestow 5.
and thy brethren.
[END]

[TEST] Conditionals & Arithmetic:
The tale begins.
if (a && (b != 0))
	chant functie sacrifice 1:.
endif
else
	chant functie sacrifice 1:.
endelse
[END]

[TEST] While Loops:
The tale begins.
while (c >= 0 && (b!=0))
	craft points a bestow health of hero.
	craft tome str1[1] bestow [3].
	chant functie sacrifice 45:.
endwhile
[END]

[TEST] For loops:
The tale begins.

for (x in 1:30) //for (points x=1. x<=30. x++)
	craft points b.
endfor

craft points x bestow chant functie sacrifice 3 : .

for (x in str1) //for (auto:x in str1) -
	craft points a bestow health[3] of hero.
	craft points a bestow health of hero[4].
	craft rune f bestow 4.
	chant functie sacrifice 4 : .
	enchant b with 3/(health of hero[3]).
endfor

[END]

[TEST] Array element assign:
The tale begins.
enchant v[5] with 4.
[END]

[TEST] Of operator:
The tale begins.
enchant life_points of clone with 100.
[END]

[TEST][SHOULD FAIL] List instantiation on a single unit:
The tale begins.
craft tome str bestow "string1"+"string2","asas".
[END]

[TEST][SHOULD FAIL] Arithmetic operations vs boolean operations:
The tale begins.
if (2 + 3)
	craft artifact points ii bestow 0.
endif
[END]



[TEST][SHOULD FAIL] Const variables cannot be assigned to:
The tale begins.
craft artifact points a bestow 3.
enchant a with 4.

[END]


[TEST] Eval function:
The tale begins.
EVAL().
craft points a bestow 3 * 2.
EVAL(a).
EVAL(3).
craft points b[2] bestow [1,2].
craft points aux bestow b[0].
EVAL(aux).
[END]
[TEST][SHOULD FAIL] Non-int eval function float:
The tale begins.
EVAL(3.0).
[END]
[TEST][SHOULD FAIL] Non-int eval function string:
The tale begins.
EVAL("str").
[END]
[TEST][SHOULD FAIL] Non-int eval function multiple param:
The tale begins.
EVAL(1, 2).
[END]
[TEST][SHOULD FAIL] Non-int eval function expression:
The tale begins.
EVAL(enchant 1 with 2).
[END]